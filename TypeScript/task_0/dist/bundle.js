/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/*!********************!*\
  !*** ./js/main.ts ***!
  \********************/

// puis mes deux objets
var student1 = {
    firstName: "Josh",
    lastName: "Dawn",
    age: 19,
    location: "New-York"
};
var student2 = {
    firstName: "Joush",
    lastName: "Down",
    age: 19,
    location: "New-York"
};
// je créer ma liste avec les deux objets précédents
var studentList = [student1, student2];
// puis je créer mon HTML
var body = document.body;
var tbl = document.createElement('table');
// d'abord le header de ma table
var header = tbl.insertRow();
var th1 = document.createElement("th");
th1.textContent = 'First Name';
var th2 = document.createElement("th");
th2.textContent = 'Last Name';
header.append(th1);
header.append(th2);
// ensuite ce que contient les deux premiers champs
//je boucle autant que le nombre d'objets dans ma list
for (var i in studentList) {
    var tr = tbl.insertRow();
    var td1 = tr.insertCell();
    td1.textContent = studentList[i].firstName.toString();
    var td2 = tr.insertCell();
    td2.textContent = studentList[i].location.toString();
}
//j'ajoute ma table dans ma list
body.appendChild(tbl);

/******/ })()
;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnVuZGxlLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQU9BLHVCQUF1QjtBQUN2QixJQUFNLFFBQVEsR0FBWTtJQUN0QixTQUFTLEVBQUUsTUFBTTtJQUNqQixRQUFRLEVBQUUsTUFBTTtJQUNoQixHQUFHLEVBQUUsRUFBRTtJQUNQLFFBQVEsRUFBRSxVQUFVO0NBQ3ZCO0FBRUQsSUFBTSxRQUFRLEdBQVk7SUFDdEIsU0FBUyxFQUFFLE9BQU87SUFDbEIsUUFBUSxFQUFFLE1BQU07SUFDaEIsR0FBRyxFQUFFLEVBQUU7SUFDUCxRQUFRLEVBQUUsVUFBVTtDQUN2QjtBQUVELG9EQUFvRDtBQUNwRCxJQUFJLFdBQVcsR0FBRyxDQUFDLFFBQVEsRUFBRSxRQUFRLENBQUMsQ0FBQztBQUV2Qyx5QkFBeUI7QUFDekIsSUFBTSxJQUFJLEdBQUcsUUFBUSxDQUFDLElBQUksQ0FBQztBQUMzQixJQUFNLEdBQUcsR0FBRyxRQUFRLENBQUMsYUFBYSxDQUFDLE9BQU8sQ0FBQyxDQUFDO0FBRTVDLGdDQUFnQztBQUNoQyxJQUFNLE1BQU0sR0FBRyxHQUFHLENBQUMsU0FBUyxFQUFFO0FBQzlCLElBQU0sR0FBRyxHQUFHLFFBQVEsQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLENBQUM7QUFDekMsR0FBRyxDQUFDLFdBQVcsR0FBRyxZQUFZO0FBQzlCLElBQU0sR0FBRyxHQUFHLFFBQVEsQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDO0FBQ3hDLEdBQUcsQ0FBQyxXQUFXLEdBQUcsV0FBVztBQUM3QixNQUFNLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQztBQUNsQixNQUFNLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQztBQUVsQixtREFBbUQ7QUFDbkQsc0RBQXNEO0FBQ3RELEtBQUssSUFBSSxDQUFDLElBQUksV0FBVyxFQUFFO0lBQ3ZCLElBQU0sRUFBRSxHQUFHLEdBQUcsQ0FBQyxTQUFTLEVBQUUsQ0FBQztJQUMzQixJQUFNLEdBQUcsR0FBRyxFQUFFLENBQUMsVUFBVSxFQUFFLENBQUM7SUFDNUIsR0FBRyxDQUFDLFdBQVcsR0FBRyxXQUFXLENBQUMsQ0FBQyxDQUFDLENBQUMsU0FBUyxDQUFDLFFBQVEsRUFBRSxDQUFDO0lBQ3RELElBQU0sR0FBRyxHQUFHLEVBQUUsQ0FBQyxVQUFVLEVBQUUsQ0FBQztJQUM1QixHQUFHLENBQUMsV0FBVyxHQUFHLFdBQVcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxRQUFRLENBQUMsUUFBUSxFQUFFLENBQUM7Q0FDeEQ7QUFFRCxnQ0FBZ0M7QUFDaEMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxHQUFHLENBQUMsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL3R5cGVzY3JpcHRfZGVwZW5kZW5jaWVzLy4vanMvbWFpbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBqZSBjcsOpZXIgbW9uIGludGVyZmFjZVxuaW50ZXJmYWNlIFN0dWRlbnR7XG4gICAgZmlyc3ROYW1lOiBTdHJpbmc7XG4gICAgbGFzdE5hbWU6IFN0cmluZztcbiAgICBhZ2U6IE51bWJlcjtcbiAgICBsb2NhdGlvbjogU3RyaW5nO1xufVxuLy8gcHVpcyBtZXMgZGV1eCBvYmpldHNcbmNvbnN0IHN0dWRlbnQxOiBTdHVkZW50ID0ge1xuICAgIGZpcnN0TmFtZTogXCJKb3NoXCIsXG4gICAgbGFzdE5hbWU6IFwiRGF3blwiLFxuICAgIGFnZTogMTksXG4gICAgbG9jYXRpb246IFwiTmV3LVlvcmtcIlxufVxuXG5jb25zdCBzdHVkZW50MjogU3R1ZGVudCA9IHtcbiAgICBmaXJzdE5hbWU6IFwiSm91c2hcIixcbiAgICBsYXN0TmFtZTogXCJEb3duXCIsXG4gICAgYWdlOiAxOSxcbiAgICBsb2NhdGlvbjogXCJOZXctWW9ya1wiXG59XG5cbi8vIGplIGNyw6llciBtYSBsaXN0ZSBhdmVjIGxlcyBkZXV4IG9iamV0cyBwcsOpY8OpZGVudHNcbmxldCBzdHVkZW50TGlzdCA9IFtzdHVkZW50MSwgc3R1ZGVudDJdO1xuXG4vLyBwdWlzIGplIGNyw6llciBtb24gSFRNTFxuY29uc3QgYm9keSA9IGRvY3VtZW50LmJvZHk7XG5jb25zdCB0YmwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCd0YWJsZScpO1xuXG4vLyBkJ2Fib3JkIGxlIGhlYWRlciBkZSBtYSB0YWJsZVxuY29uc3QgaGVhZGVyID0gdGJsLmluc2VydFJvdygpXG5jb25zdCB0aDEgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwidGhcIik7XG50aDEudGV4dENvbnRlbnQgPSAnRmlyc3QgTmFtZSdcbmNvbnN0IHRoMiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJ0aFwiKVxudGgyLnRleHRDb250ZW50ID0gJ0xhc3QgTmFtZSdcbmhlYWRlci5hcHBlbmQodGgxKVxuaGVhZGVyLmFwcGVuZCh0aDIpXG5cbi8vIGVuc3VpdGUgY2UgcXVlIGNvbnRpZW50IGxlcyBkZXV4IHByZW1pZXJzIGNoYW1wc1xuLy9qZSBib3VjbGUgYXV0YW50IHF1ZSBsZSBub21icmUgZCdvYmpldHMgZGFucyBtYSBsaXN0XG5mb3IgKGxldCBpIGluIHN0dWRlbnRMaXN0KSB7XG4gICAgY29uc3QgdHIgPSB0YmwuaW5zZXJ0Um93KCk7XG4gICAgY29uc3QgdGQxID0gdHIuaW5zZXJ0Q2VsbCgpO1xuICAgIHRkMS50ZXh0Q29udGVudCA9IHN0dWRlbnRMaXN0W2ldLmZpcnN0TmFtZS50b1N0cmluZygpO1xuICAgIGNvbnN0IHRkMiA9IHRyLmluc2VydENlbGwoKTtcbiAgICB0ZDIudGV4dENvbnRlbnQgPSBzdHVkZW50TGlzdFtpXS5sb2NhdGlvbi50b1N0cmluZygpO1xufVxuXG4vL2onYWpvdXRlIG1hIHRhYmxlIGRhbnMgbWEgbGlzdFxuYm9keS5hcHBlbmRDaGlsZCh0YmwpOyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==